---
  import classnames from "classnames";
  import Hex from "../components/Hex.astro";
  import FormTitleHex from "../components/FormTitleHex.astro";
  import Textfield from "../components/TextField.astro";
  import Button from "../components/Button.astro";
  import Toast from "../components/Toast.astro";

  import { createEventDispatcher } from "svelte";
  import { get_current_component } from "svelte/internal";
  import HoneypotField from "../components/HoneypotField.astro";

  export let open = "false";
  let toastEl = null;

  const component = get_current_component();
  const svelteDispatch = createEventDispatcher();

  const dispatch = (name, detail) => {
    svelteDispatch(name, detail);
    component.dispatchEvent &&
      component.dispatchEvent(new CustomEvent(name, { detail }));
  };

  let bot = false;
  let form = {
    name: "",
    age: "",
    graduation: "",
    graduationGrade: "",
    experience: "",
    email: "",
    phone: "",
    curriculum: null,
  };

  let formErrors = {
    name: null,
    age: null,
    graduation: null,
    graduationGrade: null,
    experience: null,
    email: null,
    phone: null,
    curriculum: null,
  };

  let curriculumInputElement;

  function formDeleteClick(){
    form.curriculum = null;
    curriculumInputElement.value = "";
  }

  function handleSubmit(event) {
    event.preventDefault();

    if (bot) {
      return;
    }

    if (!form.name || form.name.length === 0) {
      formErrors.name = " ";
    }
    if (!form.age || form.age.length === 0) {
      formErrors.age = " ";
    }
    if (!form.graduation || form.graduation.length === 0) {
      formErrors.graduation = " ";
    }
    if (!form.graduationGrade || form.graduationGrade.length === 0) {
      formErrors.graduationGrade = " ";
    }
    if (!form.experience || form.experience.length === 0) {
      formErrors.experience = " ";
    }
    if (!form.email || form.email.length === 0) {
      formErrors.email = " ";
    }
    if (/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(form.email) == false) {
      formErrors.email = "Indirizzo email non valido";
    }
    if (!form.curriculum) {
      formErrors.curriculum = "Allegare un CV in formato PDF";
    }

    if (Object.values(formErrors).find((err) => err !== null)) {
      console.log(formErrors);
      return;
    }

    console.log(event, form);

    form = {
      name: "",
      age: "",
      graduation: "",
      graduationGrade: "",
      experience: "",
      email: "",
      phone: "",
      curriculum: null,
    };

    dispatch("formsubmit", {});
    toastEl.show();

    document.querySelector("body").scrollIntoView({ behavior: "smooth" });
  }
---

<form class="contact-us" onsubmit={handleSubmit}>
  <Hex
    class="contact-us__floating-hex-1"
    width="111"
    fill="#312783"
    shadow="true"
  />
  <div
    class={classnames("drawer", {"open": open})}
  >
    <FormTitleHex />
    <h2 class="title-3 title-form">Candidatura <b>spontanea</b></h2>
    <p class="subtitle body-1">
      Vuoi far parte del <b>nostro team</b>?
    </p>
    <p class="subtitle body-1">
      <b>Inviaci</b> la tua <b>candidatura spontanea</b>
    </p>
    <div class="form">
      <div class="form-row">
        <Textfield
          class="textfield textfield-name"
          outlined
          required
          name="name"
          error={formErrors.name}
          label="Nome Cognome *"
          value={form.name}
          on:change={(e) => (form.name = e.target.value)}
          on:keyup={(e) => {
            if (e.target.value.length) {
              formErrors.name = null;
            }
          }}
        />
        <Textfield
          class="textfield textfield-age"
          outlined
          required
          name="age"
          error={formErrors.age}
          on:keyup={(e) => {
            if (e.target.value.length) {
              formErrors.age = null;
            }
          }}
          type="number"
          min="0"
          max="99"
          label="EtÃ  *"
          value={form.age}
          on:change={(e) => (form.age = e.target.value)}
        />
        <Textfield
          class="textfield textfield-experience"
          outlined
          required
          name="experience"
          error={formErrors.experience}
          on:keyup={(e) => {
            if (e.target.value.length) {
              formErrors.experience = null;
            }
          }}
          type="number"
          min="0"
          max="99"
          label="Anni di esperienza *"
          value={form.experience}
          on:change={(e) => (form.experience = e.target.value)}
        />
      </div>
      <div class="form-row">
        <Textfield
          class="textfield textfield-graduation"
          outlined
          required
          name="graduation"
          error={formErrors.graduation}
          on:keyup={(e) => {
            if (e.target.value.length) {
              formErrors.graduation = null;
            }
          }}
          label="Titolo di studio *"
          value={form.graduation}
          on:change={(e) => (form.graduation = e.target.value)}
        />
        <Textfield
          class="textfield textfield-graduation-grade"
          outlined
          required
          name="graduation-grade"
          error={formErrors.graduationGrade}
          on:keyup={(e) => {
            if (e.target.value.length) {
              formErrors.graduationGrade = null;
            }
          }}
          type="number"
          label="Votazione *"
          min="0"
          max="110"
          value={form.graduationGrade}
          on:change={(e) => (form.graduationGrade = e.target.value)}
        />
      </div>

      <div class="form-row">
        <Textfield
          class="textfield textfield-email"
          outlined
          required
          name="email"
          error={formErrors.email}
          on:keyup={(e) => {
            if (e.target.value.length) {
              formErrors.email = null;
            }
          }}
          type="email"
          label="Email *"
          value={form.email}
          on:change={(e) => (form.email = e.target.value)}
        />
        <Textfield
          class="textfield textfield-phone"
          outlined
          name="phone"
          error={formErrors.phone}
          on:keyup={(e) => {
            if (e.target.value.length) {
              formErrors.phone = null;
            }
          }}
          label="Cellulare"
          value={form.phone}
          on:change={(e) => (form.phone = e.target.value)}
        />
      </div>
      {form.curriculum && (
        <div class="cv-form-row">
          <p>
            {`${form.curriculum}`
              .replace("/", "\\")
              .substring(`${form.curriculum}`.lastIndexOf("\\") + 1)}
          </p>
          <img
            src="../img/icons/delete.svg"
            alt="remove icon"
            onclick="formDeleteClick()}"
            // onClick={(e) => {
            //   form.curriculum = null;
            //   curriculumInputElement.value = "";
            // }}
          />
        </div>
      )}
      <div class="cv-button-form-row">
        <!--
            onchange={(e) => {
            form.curriculum = e.target.value;
            formErrors.curriculum = null;
          }}
        -->
        <input
          type="file"
          id="curriculum-upload"
          class="curriculum-upload"
          name="curriculum"
          accept="application/pdf"
        />
        {formErrors.curriculum && (
          <p class="cv-error-text">{formErrors.curriculum}</p>
        )}
        <label
          class="curriculum-upload-label"
          for="curriculum-upload"
        >
          ALLEGA CV
          <img src="img/icons/attachment.svg" alt="" />
        </label>
      </div>
      <HoneypotField onchange={() => (bot = true)} />
      <div class="submit-button-form-row">
        <Button
          class="submit"
          component="button"
          variant="secondary"
          type="submit"
          on:click={handleSubmit}
        >
          Invia
        </Button>
      </div>
    </div>
  </div>
</form>
<Toast
  bind:this={toastEl}
  message="Grazie per aver inviato la tua candidatura spontanea!"
/>

<style lang="scss"> //FIXME - DELETE SCSS
  .contact-us {
    position: relative;
    margin-top: variables.$ts-spacing-8;
    max-width: variables.$ts-mobile-max;
    margin: auto;
  }

  .drawer {
    position: relative;
    max-height: 0;
    transition: max-height variables.$ts-transition-timing-default
        variables.$ts-transition-function-default,
      padding-top variables.$ts-transition-timing-default
        variables.$ts-transition-function-default;
    overflow: hidden;
    padding-top: 0px;
  }

  .open {
    max-height: 900px;
    padding-top: 100px;
  }

  h2 {
    text-align: center;
    margin-bottom: variables.$ts-spacing-4;
  }

  .title {
    margin: variables.$ts-spacing-6 0;
  }

  .subtitle {
    text-align: center;
    margin: 0;
  }

  .floating-hex-1 {
    position: absolute;
    left: -420px;
    top: -580px;
  }

  // .title-hexagon {
  //   position: absolute;
  //   z-index: -1;
  //   top: -160px;
  //   margin-left: 50%;
  //   transform: translate(-50%, 0);
  // }

  .form {
    margin: variables.$ts-spacing-6 0;
    display: block;
  }

  .form-row {
    display: flex;
    flex-wrap: wrap;
    margin: 0 (variables.$ts-spacing-1 * -1) 0;
  }

  .curriculum-upload {
    display: none;
  }

  .cv-form-row {
    align-items: center;
    background-color: #f1f1f1;
    display: flex;
    justify-content: space-between;
    padding: 0 24px;
    height: variables.$ts-spacing-4;
    border-radius: 2px;
    display: flex;
    margin: 0 0 variables.$ts-spacing-2 0;
  }

  .cv-form-row p {
    color: black;
    font-size: 15px;
    font-weight: 300;
    margin: 0;
  }

  .cv-form-row img {
    width: 18px;
    height: 18px;
    opacity: 0.8;
    margin-left: auto;
  }

  .cv-form-row img:hover {
    cursor: pointer;
    opacity: 1;
  }

  .cv-button-form-row {
    display: flex;
    align-items: center;
    margin-bottom: variables.$ts-spacing-3;
    flex-direction: column-reverse;
    align-items: stretch;
  }

  .curriculum-upload-label {
    /* Fake button, can't use component due to WebComponents limitations */
    color: white;
    background-color: #211a58;
    margin-left: auto;
    margin-bottom: variables.$ts-spacing-2;
    align-items: center;
    border-radius: 4px;
    box-sizing: border-box;
    cursor: pointer;
    display: flex;
    font-size: 15px;
    font-style: normal;
    font-weight: 500;
    height: 42px;
    justify-content: center;
    letter-spacing: 0.46px;
    line-height: 26px;
    padding: 8px 22px;
    text-transform: uppercase;
    white-space: nowrap;
    user-select: none;

    border: 0;

    transition: background-color variables.$ts-transition-timing-quick
        variables.$ts-transition-function-default,
      border-color variables.$ts-transition-timing-quick
        variables.$ts-transition-function-default;
  }

  .curriculum-upload-label img {
    height: 18px;
    margin-left: variables.$ts-spacing-1;
  }

  .curriculum-upload-label:hover {
    background-color: variables.$ts-blue-color-light;
  }

  .cv-error-text {
    color: variables.$ts-error-text;
    font-size: 16px;
    margin: 0;
    font-weight: 400;
  }

  .textfield {
    margin: 0 variables.$ts-spacing-1 variables.$ts-spacing-3;
  }

  .textfield-name .textfield-phone .textfield-graduation .textfield-graduation-grade .textfield-email {
    flex: 1 1 100%;
  }

  .textfield-age .textfield-experience {
    flex: 0 1 calc(50% - variables.$ts-spacing-2);
  }

  .submit-button-form-row {
    display: flex;
  }

  .submit {
    margin: 0 auto;
  }

  @media only screen and (min-width: variables.$ts-tablet-min) {
    .contact-us {
      margin-top: 0;
    }

    .drawer .open {
      max-height: 1100px;
    }

    .form-row {
      margin: 0 (variables.$ts-spacing-1 * -1) variables.$ts-spacing-3;
    }

    .textfield {
      margin: 0 variables.$ts-spacing-1 0;
    }

    .textfield-name .textfield-graduation .textfield-email .textfield-phone {
      flex: 1 1 0;
    }

    .textfield-age .textfield-graduation-grade {
      flex: 0 0 110px;
    }

    .textfield-experience {
      flex: 0 0 172px;
    }

    .cv-button-form-row {
      flex-direction: row;
      align-items: center;
    }

    .curriculum-upload-label {
      flex: 0 0 172px;
      margin-left: auto;
      margin-bottom: 0;
    }
  }

</style>
