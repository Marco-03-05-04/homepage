---
import classnames from "classnames";

const { variant = "primary", component = null, small = false, href, type, icon } = Astro.props;
---
{(component === "button") ? (
  <button
    class={classnames({'primary': variant === "primary", 'secondary': variant === "secondary", 'outlined': variant === "outlined", 'icon': icon, 'small': small})}
    type={type}
  >
    <slot />
    {variant === "outlined" && (
      <svg
        viewBox="0 0 16 16"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path d="M8 0L6.59 1.41L12.17 7H0V9H12.17L6.59 14.59L8 16L16 8L8 0Z" />
      </svg>
    )}
  </button>
) : (component === null || component === "a") && (
  <a
    class={classnames({'primary': variant === "primary", 'secondary': variant === "secondary", 'outlined': variant === "outlined", 'icon': icon, 'small': small})}
    href={href}
  >
    <slot />
    {variant === "outlined" && (
      <svg
        viewBox="0 0 16 16"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path d="M8 0L6.59 1.41L12.17 7H0V9H12.17L6.59 14.59L8 16L16 8L8 0Z" />
      </svg>
    )}
  </a>
)}

<style>
  a, button {
    align-items: center;
    border-radius: 4px;
    box-sizing: border-box;
    cursor: pointer;
    display: flex;
    font-size: 15px;
    font-style: normal;
    font-weight: 500;
    height: 42px;
    justify-content: center;
    letter-spacing: 0.46px;
    line-height: 26px;
    padding: 8px 22px;
    text-transform: uppercase;
    white-space: nowrap;
    user-select: none;
  }

  .primary,
  .secondary {
    box-shadow: rgba(0, 0, 0, 0.2) 0px 2px 4px -1px, rgba(0, 0, 0, 0.14) 0px 4px 5px 0px,
      rgba(240, 177, 177, 0.12) 0px 1px 10px 0px;
  }

  .primary {
    border: 0;
    color: white;
    background-color: #211a58;

    transition: background-color var(--transition-timing-quick) var(--transition-function-default);
  }

  .primary:hover {
    background-color: var(--color-blue-light);
  }

  .secondary {
    color: var(--color-blue);
    border: 1px solid transparent;
    background-color: var(--color-azure);
  }

  .secondary:hover {
    color: var(--color-blue);
    border-color: var(--color-blue);
    background-color: var(--color-azure-light);
  }

  .outlined {
    color: var(--color-blue);
    border: 1px solid var(--color-blue);
    background-color: transparent;
  }

  .icon {
    padding-left: var(--spacing-1);
    padding-right: var(--spacing-1);
  }

  svg {
    width: 0;
    margin-left: 0;
    opacity: 0;
    transition: width var(--transition-timing-quick) var(--transition-function-default),
      opacity var(--transition-timing-quick) var(--transition-function-default),
      margin-left var(--transition-timing-quick) var(--transition-function-default);
    fill: var(--color-blue);
  }

  @media screen and (max-width: 960px) {
    svg {
      display: none;
    }
  }

  .outlined:hover,
  svg {
    width: 16px;
    opacity: 1;
    margin-left: 12px;
  }

  .small {
    height: 30px;
    padding: 4px 10px;
    color: var(--color-blue-light);
    border: 1px solid rgba(63, 81, 181, 0.5);
  }

  .small svg {
    fill: var(--color-blue-light);
  }
</style>
