---
import classnames from 'classnames';

const { variant = "primary", component = null, small = false, href, type, icon } = Astro.props;
---
{(component === null || component === "a") && (
  <a
    class={classnames("button", {'button--primary': variant === "primary", 'button--secondary': variant === "secondary", 'button--outlined': variant === "outlined", 'button--icon': icon, 'button--small': (small || small === "true")})}
    href={href}
  >
    <slot />
    {variant === "outlined" && (
      <svg
        class="button__icon"
        viewBox="0 0 16 16"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path d="M8 0L6.59 1.41L12.17 7H0V9H12.17L6.59 14.59L8 16L16 8L8 0Z" />
      </svg>
    )}
  </a>
)}
{(component === "button") && (
  <button
    class={classnames("button", {'button--primary': variant === "primary", 'button--secondary': variant === "secondary", 'button--outlined': variant === "outlined", 'button--icon': icon, 'button--small': (small)})}
    type={type}
  >
    <slot />
    {variant === "outlined" && (
      <svg
        class="button__icon"
        viewBox="0 0 16 16"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path d="M8 0L6.59 1.41L12.17 7H0V9H12.17L6.59 14.59L8 16L16 8L8 0Z" />
      </svg>
    )}
  </button>
)}

<style lang="scss">
  .button {
    align-items: center;
    border-radius: 4px;
    box-sizing: border-box;
    cursor: pointer;
    display: flex;
    font-size: 15px;
    font-style: normal;
    font-weight: 500;
    height: 42px;
    justify-content: center;
    letter-spacing: 0.46px;
    line-height: 26px;
    padding: 8px 22px;
    text-transform: uppercase;
    white-space: nowrap;
    user-select: none;

    &--primary,
    &--secondary {
      box-shadow: rgba(0, 0, 0, 0.2) 0px 2px 4px -1px,
        rgba(0, 0, 0, 0.14) 0px 4px 5px 0px,
        rgba(240, 177, 177, 0.12) 0px 1px 10px 0px;
    }

    &--primary {
      border: 0;
      color: white;
      background-color: #211a58;

      transition: background-color var(--transition-timing-quick)
        var(--transition-function-default);

      &:hover {
        background-color: var(--color-blue-light);
      }
    }

    &--secondary {
      color: var(--color-blue);
      border: 1px solid transparent;
      background-color: var(--color-azure);

      &:hover {
        color: var(--color-blue);
        border-color: var(--color-blue);
        background-color: var(--color-azure-light);
      }
    }

    &--outlined {
      color: var(--color-blue);
      border: 1px solid var(--color-blue);
      background-color: transparent;
    }

    &--icon {
      padding-left: var(--spacing-1);
      padding-right: var(--spacing-1);
    }

    &__icon {
      width: 0;
      margin-left: 0;
      opacity: 0;
      transition: width var(--transition-timing-quick)
         var(--transition-function-default),
        opacity var(--transition-timing-quick)
           var(--transition-function-default),
        margin-left var(--transition-timing-quick)
           var(--transition-function-default);
      fill: var(--color-blue);

      @media screen and (max-width: var(--breakpoint-tablet-max)) {
        display: none;
      }
    }

    &--outlined:hover &__icon {
      width: 16px;
      opacity: 1;
      margin-left: 12px;
    }

    &--small {
      height: 30px;
      padding: 4px 10px;
      color: var(--color-blue-light);
      border: 1px solid rgba(63, 81, 181, 0.5);

      &__icon {
        fill: var(--color-blue-light);
      }
    }
  }
</style>
